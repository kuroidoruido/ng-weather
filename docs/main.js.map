{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/current-conditions/current-conditions.component.ts","./src/app/forecasts-list/forecasts-list.component.ts","./src/app/location.service.ts","./src/app/main-page/main-page.component.ts","./src/app/ui/input-autocomplete/index.ts","./src/app/ui/input-autocomplete/input-autocomplete.component.ts","./src/app/ui/three-state-button/base-three-state-button.directive.ts","./src/app/ui/three-state-button/index.ts","./src/app/ui/three-state-button/three-state-button-done.directive.ts","./src/app/ui/three-state-button/three-state-button-idle.directive.ts","./src/app/ui/three-state-button/three-state-button-working.directive.ts","./src/app/ui/three-state-button/three-state-button.directive.ts","./src/app/ui/three-state-button/three-state-button.module.ts","./src/app/utils/fp.ts","./src/app/weather.service.ts","./src/app/zipcode-entry/countries.data.ts","./src/app/zipcode-entry/zipcode-entry.component.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\nimport { SwPush, SwUpdate } from \"@angular/service-worker\";\nimport { interval } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {\n  constructor() {\n  }\n}\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { AppComponent } from \"./app.component\";\nimport { ZipcodeEntryComponent } from \"./zipcode-entry/zipcode-entry.component\";\nimport { LocationService } from \"./location.service\";\nimport { ForecastsListComponent } from \"./forecasts-list/forecasts-list.component\";\nimport { WeatherService } from \"./weather.service\";\nimport { CurrentConditionsComponent } from \"./current-conditions/current-conditions.component\";\nimport { MainPageComponent } from \"./main-page/main-page.component\";\nimport { RouterModule } from \"@angular/router\";\nimport { routing } from \"./app.routing\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ServiceWorkerModule } from \"@angular/service-worker\";\nimport { environment } from \"../environments/environment\";\nimport { ThreeStateButtonModule } from \"./ui/three-state-button\";\nimport { InputAutocompleteComponent } from \"./ui/input-autocomplete\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ZipcodeEntryComponent,\n    ForecastsListComponent,\n    CurrentConditionsComponent,\n    MainPageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule,\n    routing,\n    ServiceWorkerModule.register(\"/ngsw-worker.js\", {\n      enabled: environment.production,\n    }),\n    ThreeStateButtonModule,\n    InputAutocompleteComponent,\n  ],\n  providers: [LocationService, WeatherService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { ModuleWithProviders } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ForecastsListComponent } from \"./forecasts-list/forecasts-list.component\";\nimport { MainPageComponent } from \"./main-page/main-page.component\";\n\nconst appRoutes: Routes = [\n  {\n    path: \"\",\n    component: MainPageComponent,\n  },\n  {\n    path: \"forecast/:location\",\n    component: ForecastsListComponent,\n  },\n];\nexport const routing: ModuleWithProviders<any> = RouterModule.forRoot(\n  appRoutes,\n  { relativeLinkResolution: \"legacy\" }\n);\n","import { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { Location, WeatherService } from \"../weather.service\";\nimport { LocationService } from \"app/location.service\";\n\n@Component({\n  selector: \"app-current-conditions\",\n  templateUrl: \"./current-conditions.component.html\",\n  styleUrls: [\"./current-conditions.component.css\"],\n})\nexport class CurrentConditionsComponent {\n  currentConditions$ = this.weatherService.getCurrentConditions();\n\n  constructor(\n    private weatherService: WeatherService,\n    private locationService: LocationService,\n    private router: Router\n  ) {}\n\n  showForecast(location: Location) {\n    this.router.navigate([\n      \"/forecast\",\n      `${location.zipcode},${location.country}`,\n    ]);\n  }\n\n  removeLocation(event: MouseEvent, location: Location) {\n    event.stopPropagation();\n    this.locationService.removeLocation(location);\n  }\n}\n","import { Component } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { map, Observable, switchMap } from \"rxjs\";\nimport { Location, WeatherService } from \"../weather.service\";\n\n@Component({\n  selector: \"app-forecasts-list\",\n  templateUrl: \"./forecasts-list.component.html\",\n  styleUrls: [\"./forecasts-list.component.css\"],\n})\nexport class ForecastsListComponent {\n  forecast$: Observable<any>;\n\n  constructor(public weatherService: WeatherService, route: ActivatedRoute) {\n    this.forecast$ = route.params.pipe(\n      map((params) => params.location.split(\",\")),\n      map(([zipcode, country]): Location => ({ zipcode, country })),\n      switchMap((location) => weatherService.getForecast(location))\n    );\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { throwError } from \"rxjs\";\nimport { isNotDefinedOrEmpty } from \"./utils/fp\";\nimport { Location, WeatherService } from \"./weather.service\";\n\nexport const LOCATIONS: string = \"locations\";\n\n@Injectable()\nexport class LocationService {\n  locations: Location[] = [];\n\n  constructor(private weatherService: WeatherService) {\n    let locString = localStorage.getItem(LOCATIONS);\n    if (locString) {\n      this.locations = JSON.parse(locString);\n    }\n    this.weatherService.setLocations(this.locations);\n  }\n\n  addLocation(location: Location) {\n    if (isNotDefinedOrEmpty(location.zipcode)) {\n      return throwError(() => \"Empty zipcode\");\n    }\n    if (isNotDefinedOrEmpty(location.country)) {\n      return throwError(() => \"Empty country\");\n    }\n    this.locations.push(location);\n    localStorage.setItem(LOCATIONS, JSON.stringify(this.locations));\n    return this.weatherService.setLocations(this.locations);\n  }\n\n  removeLocation(location: Location) {\n    const oldLocations = this.locations;\n    this.locations = this.locations.filter(\n      (loc) =>\n        loc.zipcode !== location.zipcode || loc.country !== location.country\n    );\n    if (this.locations.length !== oldLocations.length) {\n      localStorage.setItem(LOCATIONS, JSON.stringify(this.locations));\n      this.weatherService.setLocations(this.locations);\n    }\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-main-page\",\n  templateUrl: \"./main-page.component.html\",\n})\nexport class MainPageComponent {\n}\n","export * from \"./input-autocomplete.component\";\n","import { CommonModule } from \"@angular/common\";\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { isDefinedAndNotEmpty, isNotDefinedOrEmpty } from \"app/utils/fp\";\nimport {\n  BehaviorSubject,\n  combineLatest,\n  filter,\n  map,\n  Observable,\n  share,\n} from \"rxjs\";\n\n@Component({\n  selector: \"app-input-autocomplete\",\n  templateUrl: \"./input-autocomplete.component.html\",\n  styleUrls: [\"./input-autocomplete.component.css\"],\n  imports: [CommonModule],\n  standalone: true,\n})\nexport class InputAutocompleteComponent<T extends { label: string }> {\n  private uniqueId = Math.floor(Math.random() * 1_000_000);\n  private items$ = new BehaviorSubject<T[]>([]);\n\n  @Input()\n  set items(newItems: T[]) {\n    this.items$.next(newItems);\n  }\n\n  @Input()\n  maxItemCountShown: number = 5;\n\n  @Input()\n  placeholder: string = \"\";\n\n  @Output()\n  selected = new EventEmitter<T>();\n\n  private _filter: string = \"\";\n\n  get filter() {\n    return this._filter;\n  }\n\n  set filter(newFilter: string) {\n    this._filter = newFilter;\n    this.filter$.next(newFilter);\n    this.isExpanded = true;\n  }\n\n  private _isExpanded = false;\n  get isExpanded() {\n    return this._isExpanded;\n  }\n  set isExpanded(newIsExpanded: boolean) {\n    this._isExpanded = newIsExpanded;\n    this.isExpanded$.next(newIsExpanded);\n  }\n  private isExpanded$ = new BehaviorSubject(this.isExpanded);\n\n  private filter$ = new BehaviorSubject<string>(\"\");\n\n  // here we add some metadata to each item to avoid recompute them continously\n  private itemsWithMetadata$: Observable<WithMetadata<T>[]> = this.items$.pipe(\n    map((items) =>\n      items.map(\n        (item): WithMetadata<T> => ({\n          ...item,\n          _formattedLabel: item.label,\n          _lowercaseLabel: item.label.toLocaleLowerCase(),\n        })\n      )\n    ),\n    share()\n  );\n  filteredItems$: Observable<WithMetadata<T>[]> = combineLatest([\n    this.itemsWithMetadata$,\n    this.isExpanded$,\n    this.filter$.pipe(map((filter) => filter.toLocaleLowerCase())),\n  ]).pipe(\n    // disable filtering while the dropdown is closed (avoid useless computation and rendering)\n    filter(([, isExpanded]) => isExpanded),\n    map(([items, , filter]) => {\n      if (isDefinedAndNotEmpty(filter)) {\n        return items\n          .filter((item) => item._lowercaseLabel.includes(filter))\n          .slice(0, this.maxItemCountShown)\n          .map(this.highlightFilterMatch(filter));\n      } else {\n        return items\n          .slice(0, this.maxItemCountShown)\n          .map(this.highlightFilterMatch(filter));\n      }\n    })\n  );\n\n  selectItem(item: WithMetadata<T>) {\n    this.filter = item.label;\n    const originalItem = { ...item };\n    delete originalItem._formattedLabel;\n    delete originalItem._lowercaseLabel;\n    this.selected.emit(originalItem);\n    this.isExpanded = false;\n  }\n\n  private highlightFilterMatch(\n    filter: string\n  ): (item: WithMetadata<T>) => WithMetadata<T> {\n    if (isNotDefinedOrEmpty(filter)) {\n      return (item) => item;\n    }\n    return (item) => ({\n      ...item,\n      _formattedLabel: item.label.replace(\n        new RegExp(`(${filter})`, \"gi\"),\n        \"<strong>$1</strong>\"\n      ),\n    });\n  }\n}\n\ntype WithMetadata<T> = T & { _formattedLabel: string; _lowercaseLabel: string };\n","import { TemplateRef, ViewContainerRef } from \"@angular/core\";\n\nexport class BaseThreeStateButtonState {\n  private hasView = true;\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef\n  ) {\n    this.hide();\n  }\n\n  show() {\n    if (!this.hasView) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      this.hasView = true;\n    }\n  }\n\n  hide() {\n    if (this.hasView) {\n      this.viewContainer.clear();\n      this.hasView = false;\n    }\n  }\n}\n","export * from \"./three-state-button.module\";\n","import { Directive, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { BaseThreeStateButtonState } from \"./base-three-state-button.directive\";\n\n@Directive({ selector: \"[appThreeStateButtonDone]\" })\nexport class ThreeStateButtonDoneDirective extends BaseThreeStateButtonState {\n  constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef) {\n    super(templateRef, viewContainer);\n  }\n}\n","import { Directive, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { BaseThreeStateButtonState } from \"./base-three-state-button.directive\";\n\n@Directive({ selector: \"[appThreeStateButtonIdle]\" })\nexport class ThreeStateButtonIdleDirective extends BaseThreeStateButtonState {\n  constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef) {\n    super(templateRef, viewContainer);\n  }\n}\n","import { Directive, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { BaseThreeStateButtonState } from \"./base-three-state-button.directive\";\n\n@Directive({ selector: \"[appThreeStateButtonWorking]\" })\nexport class ThreeStateButtonWorkingDirective extends BaseThreeStateButtonState {\n  constructor(templateRef: TemplateRef<any>, viewContainer: ViewContainerRef) {\n    super(templateRef, viewContainer);\n  }\n}\n","import {\n  AfterViewInit,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { isNotDefined } from \"app/utils/fp\";\nimport { ThreeStateButtonDoneDirective } from \"./three-state-button-done.directive\";\nimport { ThreeStateButtonIdleDirective } from \"./three-state-button-idle.directive\";\nimport { ThreeStateButtonWorkingDirective } from \"./three-state-button-working.directive\";\n\nexport type ThreeStateButtonState = \"IDLE\" | \"WORKING\" | \"DONE\";\n\n/**\n * This directive allow you to create a button with 3 differents states.\n *\n * Basic example:\n * <button\n *     appThreeStateButton\n *     [(state)]=\"buttonState\"\n *     [resetAfter]=\"resetAfter\"\n *   >\n *     <ng-template appThreeStateButtonIdle> Save </ng-template>\n *     <ng-template appThreeStateButtonWorking> Saving... </ng-template>\n *     <ng-template appThreeStateButtonDone> Saved </ng-template>\n *   </button>\n *\n * On \"WORKING\" and \"DONE\" state, the button will automatically be disabled.\n *\n * You can place anything you want inside the different `ng-template`s.\n *\n * You can omit the resetAfter input, in this case the reset will occur after 3s.\n *\n * To change the visible state, you just have to change the value of the state input (here via changing buttonState).\n */\n@Directive({\n  selector: \"button[appThreeStateButton]\",\n})\nexport class ThreeStateButtonDirective implements AfterViewInit, OnChanges {\n  /**\n   * Defay for resetting from \"done\" state to \"idle\" state in milliseconds\n   */\n  @Input()\n  resetAfter: number = 3_000;\n\n  /**\n   * Possible values: \"IDLE\" | \"WORKING\" | \"DONE\"\n   */\n  @Input()\n  state: ThreeStateButtonState;\n\n  @Output()\n  stateChange = new EventEmitter<ThreeStateButtonState>();\n\n  @ContentChild(ThreeStateButtonIdleDirective)\n  idleContent: ThreeStateButtonIdleDirective;\n\n  @ContentChild(ThreeStateButtonWorkingDirective)\n  workingContent: ThreeStateButtonWorkingDirective;\n\n  @ContentChild(ThreeStateButtonDoneDirective)\n  doneContent: ThreeStateButtonDoneDirective;\n\n  constructor(private elementRef: ElementRef<HTMLButtonElement>) {}\n\n  ngAfterViewInit(): void {\n    // we do this only on ngAfterViewInit because contentchild are only\n    // available here for the first time, so we cannot initialize before\n    this.show(this.state);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (\n      isNotDefined(this.idleContent) ||\n      isNotDefined(this.workingContent) ||\n      isNotDefined(this.doneContent)\n    ) {\n      // we not want to react to state change while sub directive instances are available\n      return;\n    }\n    if (changes.state && changes.state.currentValue) {\n      this.show(changes.state.currentValue);\n    }\n  }\n\n  private show(state: ThreeStateButtonState) {\n    switch (state) {\n      case \"IDLE\": {\n        this.elementRef.nativeElement.disabled = false;\n        this.idleContent.show();\n        this.workingContent.hide();\n        this.doneContent.hide();\n        break;\n      }\n      case \"WORKING\": {\n        this.elementRef.nativeElement.disabled = true;\n        this.idleContent.hide();\n        this.workingContent.show();\n        this.doneContent.hide();\n        break;\n      }\n      case \"DONE\": {\n        this.elementRef.nativeElement.disabled = true;\n        this.idleContent.hide();\n        this.workingContent.hide();\n        this.doneContent.show();\n        setTimeout(() => this.stateChange.emit(\"IDLE\"), this.resetAfter);\n        break;\n      }\n    }\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { ThreeStateButtonDirective } from \"./three-state-button.directive\";\nimport { ThreeStateButtonIdleDirective } from \"./three-state-button-idle.directive\";\nimport { ThreeStateButtonWorkingDirective } from \"./three-state-button-working.directive\";\nimport { ThreeStateButtonDoneDirective } from \"./three-state-button-done.directive\";\n\n@NgModule({\n  declarations: [\n    ThreeStateButtonDirective,\n    ThreeStateButtonIdleDirective,\n    ThreeStateButtonWorkingDirective,\n    ThreeStateButtonDoneDirective,\n  ],\n  imports: [CommonModule],\n  exports: [\n    ThreeStateButtonDirective,\n    ThreeStateButtonIdleDirective,\n    ThreeStateButtonWorkingDirective,\n    ThreeStateButtonDoneDirective,\n  ],\n})\nexport class ThreeStateButtonModule {}\n","export function isDefined<T>(x: T | undefined | null): x is T {\n  return x !== null && typeof x !== \"undefined\";\n}\n\nexport function isNotDefined<T>(\n  x: T | undefined | null\n): x is undefined | null {\n  return x === null || typeof x === \"undefined\";\n}\n\nexport function isEmpty<T extends { length: number }>(x: T): boolean {\n  return x.length === 0;\n}\n\nexport function isNotEmpty<T extends { length: number }>(x: T): boolean {\n  return x.length !== 0;\n}\n\nexport function isNotDefinedOrEmpty<T extends { length: number }>(\n  x: T | undefined | null\n): x is T {\n  return isNotDefined(x) || isEmpty(x);\n}\n\nexport function isDefinedAndNotEmpty<T extends { length: number }>(\n  x: T | undefined | null\n): x is T {\n  return isDefined(x) && isNotEmpty(x);\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n  BehaviorSubject,\n  catchError,\n  combineLatest,\n  filter,\n  map,\n  Observable,\n  of,\n  repeat,\n  share,\n  switchMap,\n  take,\n} from \"rxjs\";\n\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable()\nexport class WeatherService {\n  static URL = \"http://api.openweathermap.org/data/2.5\";\n  static APPID = \"5a4b2d457ecbef9eb2a71e480b947604\";\n  static ICON_URL =\n    \"https://raw.githubusercontent.com/udacity/Sunshine-Version-2/sunshine_master/app/src/main/res/drawable-hdpi/\";\n  private locations$ = new BehaviorSubject<Location[]>([]);\n\n  constructor(private http: HttpClient) {}\n\n  setLocations(locations: Location[]): Observable<WeatherCondition[]> {\n    this.locations$.next(locations);\n    return this.getCurrentConditions().pipe(\n      filter((conditions) => conditions.length === locations.length),\n      take(1)\n    );\n  }\n\n  private getCurrentCondition(\n    location: Location\n  ): Observable<WeatherCondition> {\n    // Here we make a request to get the curretn conditions data from the API. Note the use of backticks and an expression to insert the zipcode\n    return this.http\n      .get<ApiWeatherCondition>(\n        `${WeatherService.URL}/weather?zip=${location.zipcode},${location.country}&units=imperial&APPID=${WeatherService.APPID}`\n      )\n      .pipe(\n        map((data) => ({ location, data: data })),\n        catchError((error) => of({ location, error: error }))\n      );\n  }\n\n  getCurrentConditions(\n    autoRefreshDelayInMillis = 30_000\n  ): Observable<WeatherCondition[]> {\n    return this.locations$.pipe(\n      switchMap((locations) =>\n        locations.length > 0\n          ? combineLatest(\n              locations.map((loc) => this.getCurrentCondition(loc))\n            ).pipe(\n              take(1),\n              repeat({ delay: autoRefreshDelayInMillis }),\n              share()\n            )\n          : of([])\n      )\n    );\n  }\n\n  getForecast(location: Location): Observable<any> {\n    // Here we make a request to get the forecast data from the API. Note the use of backticks and an expression to insert the zipcode\n    return this.http.get(\n      `${WeatherService.URL}/forecast/daily?zip=${location.zipcode},${location.country}&units=imperial&cnt=5&APPID=${WeatherService.APPID}`\n    );\n  }\n\n  getWeatherIcon(id) {\n    if (id >= 200 && id <= 232) {\n      return WeatherService.ICON_URL + \"art_storm.png\";\n    } else if (id >= 501 && id <= 511) {\n      return WeatherService.ICON_URL + \"art_rain.png\";\n    } else if (id === 500 || (id >= 520 && id <= 531)) {\n      return WeatherService.ICON_URL + \"art_light_rain.png\";\n    } else if (id >= 600 && id <= 622) {\n      return WeatherService.ICON_URL + \"art_snow.png\";\n    } else if (id >= 801 && id <= 804) {\n      return WeatherService.ICON_URL + \"art_clouds.png\";\n    } else if (id === 741 || id === 761) {\n      return WeatherService.ICON_URL + \"art_fog.png\";\n    } else {\n      return WeatherService.ICON_URL + \"art_clear.png\";\n    }\n  }\n}\n\nexport interface Location {\n  zipcode: string;\n  country: string;\n}\n\nexport interface WeatherCondition {\n  location: Location;\n  data?: ApiWeatherCondition;\n  error?: any;\n}\n\ninterface ApiWeatherCondition {\n  coord: { lon: number; lat: number };\n  weather: [\n    {\n      id: number;\n      main: string;\n      description: string;\n      icon: string;\n    }\n  ];\n  base: string;\n  main: {\n    temp: number;\n    feels_like: number;\n    temp_min: number;\n    temp_max: number;\n    pressure: number;\n    humidity: number;\n  };\n  visibility: number;\n  wind: { speed: number; deg: number; gust: number };\n  rain?: { \"1h\": number };\n  snow?: { \"1h\": number };\n  clouds?: { all: number };\n  dt: number;\n  sys: {\n    type: number;\n    id: number;\n    country: string;\n    sunrise: number;\n    sunset: number;\n  };\n  timezone: number;\n  id: number;\n  name: string;\n  cod: number;\n}\n","import { countries } from \"country-data\";\n\nexport interface Country {\n  label: string;\n  code: string;\n}\n\nexport const ALL_COUNTRIES: Country[] = countries.all.map((country) => ({\n  label: country.name,\n  code: country.alpha2.toLocaleLowerCase(),\n}));\nALL_COUNTRIES.sort((a, b) => a.label.localeCompare(b.label));\n","import { Component } from \"@angular/core\";\nimport { ALL_COUNTRIES, Country } from \"./countries.data\";\nimport { ThreeStateButtonState } from \"app/ui/three-state-button/three-state-button.directive\";\nimport { LocationService } from \"../location.service\";\n\n@Component({\n  selector: \"app-zipcode-entry\",\n  templateUrl: \"./zipcode-entry.component.html\",\n})\nexport class ZipcodeEntryComponent {\n  zipcode: string = \"\";\n  country: Country;\n  buttonState: ThreeStateButtonState = \"IDLE\";\n\n  allCountries = ALL_COUNTRIES;\n\n  constructor(private service: LocationService) {}\n\n  addLocation() {\n    this.buttonState = \"WORKING\";\n    this.service\n      .addLocation({ zipcode: this.zipcode, country: this.country.code })\n      .subscribe({\n        error: (error) => {\n          console.error(error);\n          this.buttonState = \"DONE\";\n        },\n        complete: () => {\n          this.buttonState = \"DONE\";\n        },\n      });\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}